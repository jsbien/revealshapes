DJVULIBRE-SHAPE-TOOLS
=====================

INFO
====
revealshapes is stripped version of exportshapes, a tool for extracting shape libraries from DjVu documents
into a MySQL database. 
revealshapes just dumps the shape-coordinates on stadout, not to a database.

Inspired by Piotr Sikora and Janusz Bien.

REQUIREMENTS
============

DjVuLibre see file: INSTALL


COMPILATION
===========

./autogen.sh
make

USAGE
=====

To use revealshapes, you need to provide it with a filename to process. This will extract all shapes from the given document.

./revealshapes -l] [-f <page #>] [-t <page #>] [-a <document_address>] <file.djvu>


Option -f: its argument specifies a page number from which the processing should start.

Option -t: its argument specifies a limit to the number of pages processed by the program.

Option -a: its argument specifies a remote address associated with the document 
	   (to allow remote users of the database to open the document via e.g. http).

Option -l: only process data linking document pages with inherited dictionaries. Previous versions 
		   of this tool didn't do so and running exportshapes with this tool fixes this shortcoming
		   while being backwards compatible with an already filled database.

E.g. "revealshapes -f 5 -t 10 [...]" would export shapes from pages 5,6,7,8,9 and 10.

---------------

Chances are that everything will work by simply running 
commands "./configure", "make" and "make install".

Note that there will be no configure file if you obtain the djvulibre 
source using git clone. Instead there is a script 'autogen.sh' that 
uses automake to generate and call the actual configure script.
Since all autogen.sh arguments will be passed to configure,
you can simply treat autogen.sh as a replacement for configure.

Various options and environment variables affect the execution of the
configuration script.  A complete list can be obtained by typing 
"configure --help".  Also see the INSTALL file for further details.
Here are the most important ones.

* Option "--prefix=PREFIXDIR"
  This option specifies where the DjVuLibre software will be installed.
  The default prefix is /usr/local.  

Always check the output of the configuration script for warnings and errors.
In particular, the configuration script might disable the compilation of
djview if it cannot locate the required libraries and utilities.  The warning
messages are the only way to know.

3.3 - MAKE
----------

You can then perform the compilation by typing 

        $ make

The compilation can last a few minutes.  Again check the output for warnings
and errors.  Finally a brief message lets you know that the compilation was
successful.  You can then proceed with the installation.

3.4 - INSTALL
------------

Typing:

        $ make install

or if necessary:

        $ sudo make install

should:

- install the executable programs into "${prefix}/bin/".
- possibly install the shared library into "${prefix}/lib/".
- install the man pages under "${prefix}/man or ${prefix}/share/man/".
- install various ancillary files under "${prefix}/share/djvu/".
- install "${prefix}/share/pkgconfig.pc".
- optionally install the icon and mime type information files

Where ${prefix} refers to the directory specified by the prefix option
of the configuration script, which defaults to "/usr/local", and the
paths above can be fine-tuned using appropriate arguments to
./configure and make.


4 - BUILDING FOR MAC OS X
=========================

We recommend that you first install homebrew and use 
command "brew install" to obtain the following packages:
  $ brew install autoconf automake libtool pkg-config

Note that homebrew comes with a djvulibre package already.
The following instructions explain how to compile djvulibre
in a standalone manner. You may want to do that if you want
the latest version of djvulibre. Otherwise, chances are
that you should just install the djvulibre homebrew package.
  $ brew install djvulibre

But most people should find sufficient
to just install the homebrew package.

Then you can run configure
  $ ./configure

Then you can compile with 
  $ make

Running "make install" will install djvulibre in directory /usr/local.
This may not be a good idea as they will interfere with homebrew.
You may instead specify an alternate directory with DESTDIR=...
  $ make install DESTDIR=/usr/local/djvulibre-install
  


5 - BUILDING FOR WINDOWS
========================

5.1- Using Microsoft Visual C++ 2019
------------------------------------

   See the directory win32.
   Populate the zlib, jpeg and tiff directories with
   the open source code suggested in the README files.
   Check win32/djvulibre/dirs.props to see
   how to name the directories.
   Then open win32/djvulibre/djvulibre.sln and compile.

   Next step would then be to follow the instructions
   in the djview package to create a djview project and
   add it to this solution. Finally you can use the script
   djvulibre-install.sh and djvulibre.nsi to prepare
   the djvulibre+djview installer.


5.2- Using Mingw
----------------

   You must first install the mingw compiler and the msys environment.
   See www.mingw.org for more information.
   From the msys shell, run the usual commands 
     $ configure
     $ make
   Then collect the djvulibre dll from directory libdjvu/.libs
   and the executables from directory tools/.libs 
   Please refer to the file INSTALL for information
   about the arguments of the script 'configure'.


5.3- Using Cygwin 
-----------------

   Simply run the usual commands 
     $ configure
     $ make
     $ make install
   Please refer to the file INSTALL for information
   about the arguments of the script 'configure'.
 


